<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABAAAAAQACAYAAAB/HSuDAAAABGdBTUEAALGPC/xhBQAAIYJJREFUeF7t
        3Quz3WV5xuEdCCAighKwFCwFRZGTotROrVjsaEYUoWgROYqtVdSJBEnBKBLtOA6DSIqHoXJog3gAiiBH
        gUD8ar3fGWYyZT979oI3h/e//tc18/sMz5s7a6+1AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        nZQAgIGdkM5Pn0s3pfYlgg+m9vM8z6bq2EuSpHnU3gLtTdDeBu2NsDW1N0N7OxyfAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+H9WVv4PIkPviM7FgccA
        AAAASUVORK5CYII=
</value>
  </data>
</root>